{
  "hash": "25bf48e8f37d7c2ad0037d24c49d4718",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercice 4\"\nauthor: \"Authors.s\"\ndate: \"2025-04-xx\"\ndate-modified: \"2025-04-12\"\nformat: \n  html:\n    embed-resources: false\n    toc: true\n    code-fold: true\n    code-summary: \"Show the code\"\n    code-tools: true\n    toc-location: right\n    page-layout: article\n    code-overflow: wrap\ntoc: true\nnumber-sections: false\neditor: visual\ncategories: [\"Feuille 1\", \"Régression\", \"MCO\", \"RI\"]\nimage: \"\"\ndescription: \"Comparaison de la méthodes des moindres carrés ordinaires et la méthode inverse pour la régression simple\"\n---\n\n\n\n# Intervenant.e.s\n\n### Rédaction\n\n-   **Clément Poupelin**, [clementjc.poupelin\\@gmail.com](mailto:clementjc.poupelin@gmail.com){.email}\\\n\n### Relecture\n\n-   \n\n# Setup\n\n:::: panel-tabset\n## Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)        # manipulation des données\n```\n:::\n\n\n\n## Fonctions\n\n::: panel-tabset\n\n### Coefficients MCO\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbeta1_MCO <- function(x, y) {\n  sum((x - mean(x)) * (y - mean(y))) / sum((x - mean(x))^2)\n}\n\nbeta0_MCO <- function(x, y) {\n  mean(y) - beta1_MCO(x, y) * mean(x)\n}\n```\n:::\n\n\n\n### Coefficients RI\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbeta1_RI <- function(x, y) {\n  sum((y - mean(y))^2) / sum((x - mean(x)) * (y - mean(y)))\n}\n\nbeta0_RI <- function(x, y) {\n  mean(y) - beta1_RI(x, y) * mean(x)\n}\n```\n:::\n\n\n\n:::\n\n## Seed\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(140400)\n```\n:::\n\n\n\n::::\n\n# Données\n\nOn va illustrer par des simulations les propriétés des estimateurs des coefficients de la régression simple par la méthode MCO et par la méthode inverse.\n\nPour cela on fera sur deux parties disticntes :\n\n  - **Partie 1** : iniiation à l'estimation des coefficients de régression via des fonctions construites \"à la main\"\n  \n  - **Partie 2** : utilisation de la fonction *`lm`* pour l'estimation des coefficients de régression\n\n\n::: panel-tabset\n\n## Partie 1\n\nOn considère deux échantillons de $n$ variables $(X_1, . . . , X_n)$ et $(Y_1, . . . , Y_n)$. On suppose que les $(X_1, . . . , X_n)$ sont connus. On considère le modèle de régression simple\n$$Y_i = \\beta_0 + \\beta_1 X_i + \\varepsilon_i$$\noù les $\\varepsilon_i$ sont i.i.d de moyenne nulle, non corrélées et de variance $\\sigma^2$ .\n\n\nOn va rappeler que les coeffictients MCO sont de la forme : \n\n  - $\\hat{\\beta}_{1\\text{MCO}} = \\frac{\\sum_{i=1}^n(X_i - \\bar{X})(Y_i - \\bar{Y})}{\\sum_{i=1}^{n}(X_i - \\bar{X})^2} = \\frac{S_{XY}}{S_{XX}}$\n\n  - $\\hat{\\beta}_{0\\text{MCO}} = \\bar{Y} + \\hat{\\beta}_{1\\text{MCO}}\\bar{X}$\n\n\nMaintenant, on veut récupérer la formule des coefficients de régression inverse. Pour cela, on part d'une transformation du modèle linéaire précédent : \n\n$$X_i = \\frac{-\\beta_0}{\\beta_1} + \\frac{1}{\\beta_1}Y_i + \\varepsilon_i'$$\n\nCe qui nous donne les coeffficients $\\alpha_0 = \\frac{-\\beta_0}{\\beta_1}$ et $\\alpha_1 = \\frac{1}{\\beta_1}$. Et si on procède à une estimation MCO sur ces coefficients, on obtient : \n\n  - $\\hat{\\alpha}_{1\\text{MCO}} = \\frac{S_{XY}}{S_{YY}}$\n\n  - $\\hat{\\alpha}_{0\\text{MCO}} = \\bar{X} + \\hat{\\alpha}_{1\\text{MCO}}\\bar{Y}$\n\nOr, on a aussi $\\hat{\\alpha}_0 = \\frac{-\\hat{\\beta}_0}{\\hat{\\beta}_1}$ et $\\hat{\\alpha}_1 = \\frac{1}{\\hat{\\beta}_1}$.\n\nCe qui nous permet donc d'arriver aux estimateurs de régression inverse \n\n  - $\\hat{\\beta}_{1\\text{RI}} = \\frac{S_{YY}}{S_{XY}}$\n\n  - $\\hat{\\beta}_{0\\text{RI}} = \\bar{Y} + \\hat{\\beta}_{1\\text{MCO}}\\bar{X}$\n\n\nMaintenant qu'on a ces formule, on va se baser sur des données présentes dans le fichier [X.txt](https://github.com/Clement-Poupelin/Regression_lineaire_et_logistique/tree/main/Data) et le but sera de calculer les estimateurs précédents sur $B=100$ échantiloons de $(Y_i)_i$ définis par $Y_i = 10 + 2X_i + \\varepsilon_i$, les $\\varepsilon_i$ sont gaussiennes i.i.d de moyenne nulle, non corrélées et de variance $\\sigma^2=1$.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX_data <- readr::read_csv(\"../Data/X.txt\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\nRows: 100 Columns: 2\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" dbl\n(2): ...1, x\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n\n\n:::\n\n```{.r .cell-code}\n## Parameters\nB <- 100\n\nbeta0 <- 10\nbeta1 <- 2\n\nX_data$epsilon <- rnorm(B, 0, 1)\n\n## Model\nX_data$Y <- 10 + 2*X_data$x + X_data$epsilon\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# on fait nos estimateur MCO inverses\n# beta1_RI(X_data$x, 10 + 2*X_data$x + rnorm(100, 0, 1))\n\n# beta0_RI(as.numeric(X_data$x), as.numeric(10 + 2*X_data$x + rnorm(100, 0, 1)))\n#> beta1RI(as.numeric(data$x), as.numeric(data$Y))\n#[1] 2.500503\n#> beta0RI(as.numeric(data$x), as.numeric(data$Y))\n#[1] 9.892161\n\n\n# beta1_MCO(as.numeric(X_data$x), as.numeric(X_data$Y))\n\n# beta0_MCO(as.numeric(X_data$x), as.numeric(X_data$Y))\n#> beta1MCO(as.numeric(data$x), as.numeric(data$Y))\n#[1] 1.843383\n#> beta0MCO(as.numeric(data$x), as.numeric(data$Y))\n#[1] 9.89286\n\n\n\n## nos esimateurs sont pas loin des beta1 et beta0\n\n\n\nestim <- data.frame(\n  beta1_RI = beta1_RI(X_data$x, 10 + 2 * X_data$x + rnorm(B, 0, 1)),\n  beta0_RI = beta0_RI(as.numeric(X_data$x), as.numeric(10 + 2 * X_data$x + rnorm(100, 0, 1))),\n  beta1_MCO = beta1_MCO(as.numeric(X_data$x), as.numeric(X_data$Y)),\n  beta0_MCO = beta0_MCO(as.numeric(X_data$x), as.numeric(X_data$Y))\n) \nestim %>% DT::datatable()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-1769ff2b8a1c7b9ff73c\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1769ff2b8a1c7b9ff73c\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\"],[2.507117788132334],[9.889038123119386],[2.095982970161266],[9.986769585813937]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>beta1_RI<\\/th>\\n      <th>beta0_RI<\\/th>\\n      <th>beta1_MCO<\\/th>\\n      <th>beta0_MCO<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"beta1_RI\",\"targets\":1},{\"name\":\"beta0_RI\",\"targets\":2},{\"name\":\"beta1_MCO\",\"targets\":3},{\"name\":\"beta0_MCO\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n:::: success-header\n::: success-icon\n:::\n\nRésultats\n::::\n\n::: success\nOn est très proche des résultats recherchées\n:::\n\nTracons les boxplot des estimateurs obtenus (on tracera les vraies valeurs des paramètres).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# X_data$B1RI = 0\n# X_data$B0RI = 0\n\nfor (i in 1:B){\n  X_data$B1RI[i] <- beta1_RI(X_data$x, 10 + 2*X_data$x + rnorm(B, 0, 1))\n  \n  X_data$B0RI[i] <- beta0_RI(as.numeric(X_data$x), as.numeric(10 + 2*X_data$x + rnorm(B, 0, 1)))\n  \n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `B1RI`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `B0RI`.\n```\n\n\n:::\n\n```{.r .cell-code}\n# X_data$B1MCO = 0\n# X_data$B0MCO = 0\n\nfor (i in 1:B){\n  X_data$B1MCO[i] <- beta1_MCO(X_data$x, 10 + 2*X_data$x + rnorm(B, 0, 1))\n  \n  X_data$B0MCO[i] <- beta0_MCO(as.numeric(X_data$x), as.numeric(10 + 2*X_data$x + rnorm(B, 0, 1)))\n  \n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `B1MCO`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `B0MCO`.\n```\n\n\n:::\n\n```{.r .cell-code}\nboxplot(X_data$B0RI, X_data$B0MCO,\n        main = \"Estimation de Beta0 avec une erreur ~N(0,1)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B0RI\", \"B0MCO\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE) \nabline(v = 10, col = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nboxplot(X_data$B1RI, X_data$B1MCO,\n        main = \"Estimation de Beta1 avec une erreur ~N(0,1)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B1RI\", \"B1MCO\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE)\nabline(v = 2, col = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n```{.r .cell-code}\n########### Question 6) ##############\n\nX_data$B1RI2 = 0\nX_data$B0RI2 = 0\n\nfor (i in 1:100){\n  X_data$B1RI2[i] = beta1_RI(X_data$x, 10 + 2*X_data$x + rnorm(100, 0, 16))\n  \n  X_data$B0RI2[i] = beta0_RI(as.numeric(X_data$x), as.numeric(10 + 2*X_data$x + rnorm(100, 0, 16)))\n  \n}\n\n\nX_data$B1MCO2 = 0\nX_data$B0MCO2 = 0\n\nfor (i in 1:100){\n  X_data$B1MCO2[i] = beta1_MCO(X_data$x, 10 + 2*X_data$x + rnorm(100, 0, 16))\n  \n  X_data$B0MCO2[i] = beta0_MCO(as.numeric(X_data$x), as.numeric(10 + 2*X_data$x + rnorm(100, 0, 16)))\n  \n}\n\n\nboxplot(X_data$B0RI2, X_data$B0MCO2,\n        main = \"Estimation de Beta0 avec une erreur ~N(0,16)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B0RI\", \"B0MCO\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-6-3.png){width=672}\n:::\n\n```{.r .cell-code}\nboxplot(X_data$B1RI2, X_data$B1MCO2,\n        main = \"Estimation de Beta1 avec une erreur ~N(0,16)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B1RI\", \"B1MCO\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-6-4.png){width=672}\n:::\n\n```{.r .cell-code}\n########### Question 5) Corrigé ##############\n\n\n\nB = 10000\nn = length(X_data$x); n\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 100\n```\n\n\n:::\n\n```{.r .cell-code}\nres = matrix(0, ncol=4, nrow=B)\ndim(res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10000     4\n```\n\n\n:::\n\n```{.r .cell-code}\nfor (b in 1:B){\n  eps = rnorm(n)\n  y = 10 + 2 * X_data$x + eps\n  res[b,] = c(beta1_MCO(X_data$x, y), beta0_MCO(X_data$x, y), beta1_RI(X_data$x, y), beta0_RI(X_data$x, y))\n\n}\n\nboxplot(res[,c(1,3)], \n        main = 'Comparaison des pentes', \n        names = c('MCO', 'RI'))\nabline(h = 2, col = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-6-5.png){width=672}\n:::\n:::\n\n\n\nCalcul du biais et de la variance.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#### faire apparaitre biais et variance ####\n\n# calcul du biais \n\nbiaisbeta1MCO = mean(res[,1] - 2)\nvariancebeta1MCO = (1/B) * sum((res[,1] - 2)**2)\n\nbiaisbeta0MCO = (1/B) * sum(res[,2] - 2)\nvariancebeta0MCO = (1/B) * sum((res[,2] - 2)**2)\n\nbiaisbeta1RI = (1/B) * sum(res[,3] - 2)\nvariancebeta1RI = (1/B) * sum((res[,3] - 2)**2)\n\nbiaisbeta0RI = (1/B) * sum(res[,4] - 2)\nvariancebeta0RI = (1/B) * sum((res[,4] - 2)**2)\n\n\nbiaisbeta1MCO\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.001515478\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 0.0007703197\n\nvariancebeta1MCO\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01000797\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 0.01003526\n\nbiaisbeta0MCO\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8.001214\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 7.999521\n\nvariancebeta0MCO\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 64.02936\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 64.00262\n\nbiaisbeta1RI\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4978257\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 0.4995708\n\nvariancebeta1RI\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2584821\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 0.2605581\n\nbiaisbeta0RI\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7.948585\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 7.946902\n\nvariancebeta0RI\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 63.18995\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 63.16354\n\n\n#####\n\n\nboxplot(res[,c(2,4)],\n        main = \"Estimation de Beta0 avec une erreur ~N(0,1)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B0MCO\", \"B0RI\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE) \nabline(v = 10, col = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nboxplot(res[,c(1,3)],\n        main = \"Estimation de Beta1 avec une erreur ~N(0,1)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B1MCO\", \"B1RI\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE)\nabline(v = 2, col = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n```{.r .cell-code}\n## On voit que c'est des estimateurs sans biais \n\n\n########### Question 6) Corrigé ##############\n\n\nres2 = matrix(0, ncol=4, nrow=B)\n\n\nfor (b in 1:B){\n  eps = rnorm(n, 0, 16)\n  y = 10 + 2 * X_data$x + eps\n  res2[b,] = c(beta1_MCO(X_data$x, y), beta0_MCO(X_data$x, y), beta1_RI(X_data$x, y), beta0_RI(X_data$x, y))\n}\n\n\nboxplot(res2[,c(2,4)],\n        main = \"Estimation de Beta0 avec une erreur ~N(0,16)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B0MCO\", \"B0RI\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE) \nabline(v = 10, col = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n\n```{.r .cell-code}\nboxplot(res2[,c(1,3)],\n        main = \"Estimation de Beta1 avec une erreur ~N(0,16)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B1RI\", \"B1MCO\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE)\nabline(v = 2, col = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-7-4.png){width=672}\n:::\n:::\n\n\n\n\n## Partie 2\n\n:::\n\n\n\n# Analyse\n\n::: callout-note\nMETTRE LES REMARQUES\n:::\n\n::: callout-warning\nMETTRE LES POINTS D'ATTENTION\n:::\n\n:::: success-header\n::: success-icon\n:::\n\nRésultats\n::::\n\n::: success\nMETTRE LES CONCLUSIONS\n:::\n\n# Conclusion\n\n# Session info\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# sessioninfo::session_info(pkgs = \"attached\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n######################### Exercice 4 ###########################################\n################################################################################\n\n######################### Partie 1 ####\n#######################################\n\n########### Question 3) ##############\n\nbeta1MCO = function( x, y ){\n  S(x,y)/S(x,x)\n}\n\nbeta0MCO = function( x, y ){\n  mean(y) - beta1MCO(x, y) * mean(x)\n}\n\n\n########### Question 4) ##############\n\nbeta1RI = function( x, y ){\n  S(y,y)/S(x,y)\n}\n\nbeta0RI = function( x, y ){\n  mean(y) - beta1RI(x, y) * mean(x)\n}\n\n\n########### Question 5) ##############\n\nlibrary(readr)\ndata <- readr::read_csv(\"../Data/X.txt\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\nRows: 100 Columns: 2\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" dbl\n(2): ...1, x\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n\n\n:::\n\n```{.r .cell-code}\n# View(data)\n\nbeta1 = 2\nbeta0 = 10\n\n\n# On créer une variable epsilon que l'on complète de 100 valeurs (taille de X)\n# qui sont des observation obtenue suivant une loi gaussienne (0, 1)\ndata$epsilon <- rnorm(100, 0, 1)\n\n# on construit la variable des Yi\ndata$Y = 10 + 2*data$x + data$epsilon\n\n\n# on fait nos estimateur MCO inverses\nbeta1RI(data$x, 10 + 2*data$x + rnorm(100, 0, 1))\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in S(y, y): impossible de trouver la fonction \"S\"\n```\n\n\n:::\n\n```{.r .cell-code}\nbeta0RI(as.numeric(data$x), as.numeric(10 + 2*data$x + rnorm(100, 0, 1)))\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in S(y, y): impossible de trouver la fonction \"S\"\n```\n\n\n:::\n\n```{.r .cell-code}\n#> beta1RI(as.numeric(data$x), as.numeric(data$Y))\n#[1] 2.500503\n#> beta0RI(as.numeric(data$x), as.numeric(data$Y))\n#[1] 9.892161\n\n\nbeta1MCO(as.numeric(data$x), as.numeric(data$Y))\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in S(x, y): impossible de trouver la fonction \"S\"\n```\n\n\n:::\n\n```{.r .cell-code}\nbeta0MCO(as.numeric(data$x), as.numeric(data$Y))\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in S(x, y): impossible de trouver la fonction \"S\"\n```\n\n\n:::\n\n```{.r .cell-code}\n#> beta1MCO(as.numeric(data$x), as.numeric(data$Y))\n#[1] 1.843383\n#> beta0MCO(as.numeric(data$x), as.numeric(data$Y))\n#[1] 9.89286\n\n\n\n## nos esimateurs sont pas loin des beta1 et beta0\n\n\ndata$B1RI = 0\ndata$B0RI = 0\n\nfor (i in 1:10000){\n  data$B1RI[i] = beta1RI(data$x, 10 + 2*data$x + rnorm(100, 0, 1))\n  \n  data$B0RI[i] = beta0RI(as.numeric(data$x), as.numeric(10 + 2*data$x + rnorm(100, 0, 1)))\n  \n}\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in S(y, y): impossible de trouver la fonction \"S\"\n```\n\n\n:::\n\n```{.r .cell-code}\ndata$B1MCO = 0\ndata$B0MCO = 0\n\nfor (i in 1:10000){\n  data$B1MCO[i] = beta1MCO(data$x, 10 + 2*data$x + rnorm(100, 0, 1))\n  \n  data$B0MCO[i] = beta0MCO(as.numeric(data$x), as.numeric(10 + 2*data$x + rnorm(100, 0, 1)))\n  \n}\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in S(x, y): impossible de trouver la fonction \"S\"\n```\n\n\n:::\n\n```{.r .cell-code}\nboxplot(data$B0RI, data$B0MCO,\n        main = \"Estimation de Beta0 avec une erreur ~N(0,1)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B0RI\", \"B0MCO\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE) \nabline(v = 10, col = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nboxplot(data$B1RI, data$B1MCO,\n        main = \"Estimation de Beta1 avec une erreur ~N(0,1)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B1RI\", \"B1MCO\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE)\nabline(v = 2, col = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n\n```{.r .cell-code}\n########### Question 6) ##############\n\ndata$B1RI2 = 0\ndata$B0RI2 = 0\n\nfor (i in 1:10000){\n  data$B1RI2[i] = beta1RI(data$x, 10 + 2*data$x + rnorm(100, 0, 16))\n  \n  data$B0RI2[i] = beta0RI(as.numeric(data$x), as.numeric(10 + 2*data$x + rnorm(100, 0, 16)))\n  \n}\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in S(y, y): impossible de trouver la fonction \"S\"\n```\n\n\n:::\n\n```{.r .cell-code}\ndata$B1MCO2 = 0\ndata$B0MCO2 = 0\n\nfor (i in 1:10000){\n  data$B1MCO2[i] = beta1MCO(data$x, 10 + 2*data$x + rnorm(100, 0, 16))\n  \n  data$B0MCO2[i] = beta0MCO(as.numeric(data$x), as.numeric(10 + 2*data$x + rnorm(100, 0, 16)))\n  \n}\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in S(x, y): impossible de trouver la fonction \"S\"\n```\n\n\n:::\n\n```{.r .cell-code}\nboxplot(data$B0RI2, data$B0MCO2,\n        main = \"Estimation de Beta0 avec une erreur ~N(0,16)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B0RI\", \"B0MCO\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-9-3.png){width=672}\n:::\n\n```{.r .cell-code}\nboxplot(data$B1RI2, data$B1MCO2,\n        main = \"Estimation de Beta1 avec une erreur ~N(0,16)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B1RI\", \"B1MCO\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-9-4.png){width=672}\n:::\n\n```{.r .cell-code}\n########### Question 5) Corrigé ##############\n\n\n\nB = 10000\nn = length(data$x); n\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 100\n```\n\n\n:::\n\n```{.r .cell-code}\nres = matrix(0, ncol=4, nrow=B)\ndim(res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10000     4\n```\n\n\n:::\n\n```{.r .cell-code}\nfor (b in 1:B){\n  eps = rnorm(n)\n  y = 10 + 2 * data$x + eps\n  res[b,] = c(beta1MCO(data$x, y), beta0MCO(data$x, y), beta1RI(data$x, y), beta0RI(data$x, y))\n\n}\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in S(x, y): impossible de trouver la fonction \"S\"\n```\n\n\n:::\n\n```{.r .cell-code}\nboxplot(res[,c(1,3)], \n        main = 'Comparaison des pentes', \n        names = c('MCO', 'RI'))\nabline(h = 2, col = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-9-5.png){width=672}\n:::\n\n```{.r .cell-code}\n#### faire apparaitre biais et variance ####\n\n# calcul du biais \n\nbiaisbeta1MCO = mean(res[,1] - 2)\nvariancebeta1MCO = (1/B) * sum((res[,1] - 2)**2)\n\nbiaisbeta0MCO = (1/B) * sum(res[,2] - 2)\nvariancebeta0MCO = (1/B) * sum((res[,2] - 2)**2)\n\nbiaisbeta1RI = (1/B) * sum(res[,3] - 2)\nvariancebeta1RI = (1/B) * sum((res[,3] - 2)**2)\n\nbiaisbeta0RI = (1/B) * sum(res[,4] - 2)\nvariancebeta0RI = (1/B) * sum((res[,4] - 2)**2)\n\n\nbiaisbeta1MCO\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -2\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 0.0007703197\n\nvariancebeta1MCO\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 0.01003526\n\nbiaisbeta0MCO\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -2\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 7.999521\n\nvariancebeta0MCO\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 64.00262\n\nbiaisbeta1RI\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -2\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 0.4995708\n\nvariancebeta1RI\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 0.2605581\n\nbiaisbeta0RI\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -2\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 7.946902\n\nvariancebeta0RI\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n\n```{.r .cell-code}\n#[1] 63.16354\n\n\n#####\n\n\nboxplot(res[,c(2,4)],\n        main = \"Estimation de Beta0 avec une erreur ~N(0,1)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B0MCO\", \"B0RI\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE) \nabline(v = 10, col = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-9-6.png){width=672}\n:::\n\n```{.r .cell-code}\nboxplot(res[,c(1,3)],\n        main = \"Estimation de Beta1 avec une erreur ~N(0,1)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B1MCO\", \"B1RI\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE)\nabline(v = 2, col = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-9-7.png){width=672}\n:::\n\n```{.r .cell-code}\n## On voit que c'est des estimateurs sans biais \n\n\n########### Question 6) Corrigé ##############\n\n\nres2 = matrix(0, ncol=4, nrow=B)\n\n\nfor (b in 1:B){\n  eps = rnorm(n, 0, 16)\n  y = 10 + 2 * data$x + eps\n  res2[b,] = c(beta1MCO(data$x, y), beta0MCO(data$x, y), beta1RI(data$x, y), beta0RI(data$x, y))\n}\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in S(x, y): impossible de trouver la fonction \"S\"\n```\n\n\n:::\n\n```{.r .cell-code}\nboxplot(res2[,c(2,4)],\n        main = \"Estimation de Beta0 avec une erreur ~N(0,16)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B0MCO\", \"B0RI\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE) \nabline(v = 10, col = 2)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-9-8.png){width=672}\n:::\n\n```{.r .cell-code}\nboxplot(res2[,c(1,3)],\n        main = \"Estimation de Beta1 avec une erreur ~N(0,16)\",\n        xlab = \"xlab\",\n        #ylab = \"\",\n        names = c(\"B1RI\", \"B1MCO\"),\n        col = c(\"purple\",\"pink\"),\n        border = \"brown\",\n        horizontal = TRUE,\n        notch = TRUE)\nabline(v = 2, col = 2)\n\n\n\n\n\n\n\n\n######################### Partie 2 ####\n#######################################\n\n\n########### Question 1) ##############\nlibrary(readr)\nozone <- read_csv(\"1. Workspace/Master IS/M1/Régression linéaire et logistique/TD et TP/ozone.csv\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: '1. Workspace/Master IS/M1/Régression linéaire et logistique/TD et TP/ozone.csv' does not exist in current working directory ('/home/clement/Documents/1_Projet/Perso/Regression_lineaire_et_logistique/posts').\n```\n\n\n:::\n\n```{.r .cell-code}\nView(ozone)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'ozone' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(ozone) +\n  aes(x = ozone$T12, y = ozone$O3) +\n  geom_point(colour = 'purple') +\n  geom_smooth(formula = y~x, colour=\"red\", method=\"lm\") +\n  #geom_smooth(formula = x~y, method = \"lm\") +\n  ylab(\"Concentration en ozone\") +\n  xlab(\"Température\") +\n  ggtitle(\"Nuage de points du jeu de données Ozone\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'ozone' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nl = lm(ozone$O3~ozone$T12, data = ozone)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in eval(mf, parent.frame()): objet 'ozone' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nl$coefficients\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'l' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(l)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'l' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\n#l'intercept c'est beta0 estimé et \n# l'autre valeur c'est la pente beta 1\n# on a donc beta1hat 2.7010\n#on sait que beta1hatRI = Syy / Sxy alors que beta1hatMCO = Sxy/Sxx\n\nlRI = lm(ozone$T12~ozone$O3, data = ozone) # on inverse les roles X et Y\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in eval(mf, parent.frame()): objet 'ozone' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nlRI$coefficients\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'lRI' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nl2 = 1 / lRI$coefficients[2] \n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'lRI' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nl2\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'l2' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\n#9.67831 \n\n\nplot(ozone$O3, ozone$T12,\n     main = \"titre\",\n     sub = eq)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'ozone' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nabline(l, col=\"blue\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'l' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nabline(lRI, col=\"red\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'lRI' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\n########### Corrigé ##############\n\n\nplot(x<-ozone$T12,y<-ozone$O3,pch=20,xlab=\"Température\",\n     ylab=\"Ozone\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'ozone' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nabline(lm(y~x),col=2,lty=2,lwd=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in eval(predvars, data, env): objet 'x' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nb2<-1/coef(lm(x~y))[2]\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in eval(predvars, data, env): objet 'x' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\na2<-mean(y)-b2*mean(x)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'b2' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nabline(a=a2,b=b2,col=3,lty=3,lwd=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'a2' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\npoints(mean(x), mean(y), pch=21, col=4) # affichage du point moyen\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: objet 'x' introuvable\n```\n\n\n:::\n\n```{.r .cell-code}\nlegend(\"topleft\",c(\"MCO\",\"RI\"),lty=2:3,col=2:3,cex=0.8)\n```\n\n::: {.cell-output-display}\n![](Exercice_01.04_files/figure-html/unnamed-chunk-9-9.png){width=672}\n:::\n\n```{.r .cell-code}\n## les deux droites de regression passent par le point moyen \n```\n:::\n",
    "supporting": [
      "Exercice_01.04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}