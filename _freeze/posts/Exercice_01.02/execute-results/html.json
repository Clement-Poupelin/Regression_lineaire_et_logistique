{
  "hash": "30585aa5152399ed3c7fc77338b1f99b",
  "result": {
    "markdown": "---\ntitle: \"Exercice 2\"\nauthor: \"Clément Poupelin\"\ndate: \"2025-04-xx\"\ndate-modified: \"2025-04-06\"\nformat: \n  html:\n    embed-resources: false\n    toc: true\n    code-fold: true\n    code-summary: \"Show the code\"\n    code-tools: true\n    toc-location: right\n    page-layout: article\n    code-overflow: wrap\ntoc: true\nnumber-sections: false\neditor: visual\ncategories: [\"categorie 1\", \"cotegorie 2\"]\nimage: \"\"\ndescription: \"Description\"\n---\n\n\n# Intervenant.e.s\n\n### Rédaction\n\n-   **Clément Poupelin**, [clementjc.poupelin\\@gmail.com](mailto:clementjc.poupelin@gmail.com){.email}\\\n\n### Relecture\n\n-   \n\n# Setup\n\n:::: panel-tabset\n## Packages\n\n\n::: {.cell}\n\n:::\n\n\n## Fonctions\n\n::: panel-tabset\n### Fonction 1\n\n### Fonction 2\n:::\n\n## Seed\n::::\n\n# Données\n\n| Table de données |\n|:---------:|:-----:|:------:|:------:|:------:|:------:|:------:|:------:| \n| $x$ | 1000 | 800 | 600 | 450 | 300 | 200 | 100 |\n| $y$ | 573 | 534 | 495 | 451 | 395 | 337 | 253 |\n\n\n\nReprésenter sur deux graphiques différents y en fonction de x et les rangs de y en fonction des\nrangs de x. Commenter.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: le package 'ggplot2' a été compilé avec la version R 4.2.3\n```\n:::\n\n```{.r .cell-code}\n#### Graphe de y en fonction de x \n\n# x = c(1000, 800, 600, 450, 300, 200, 100)\n# y = c(573, 534, 495, 451, 395, 337, 253)\n\n\nd <- data.frame(x = c(1000, 800, 600, 450, 300, 200, 100),\n                y = c(573, 534, 495, 451, 395, 337, 253))\n\n\nggplot(d) +\n  aes(x = x, y = y) +\n  geom_point(colour = \"red\") +\n  xlab(\"x values\") +\n  ylab(\"y values\")\n```\n\n::: {.cell-output-display}\n![](Exercice_01.02_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#### Graphe des rangs y en fonction des rangs x\n# \n# xtilde = rank(x)\n# ytilde = rank(y)\n\nd2 <- data.frame(xtilde = rank(d$x),\n                   ytilde = rank(d$y))\n\nggplot(d2) +\n  aes(x = d2[,1], y = d2[,2]) +\n  geom_point(colour = \"red\") +\n  xlab(\"Rank(x) values\") +\n  ylab(\"Rank(y) values\")\n```\n\n::: {.cell-output-display}\n![](Exercice_01.02_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n:::\n\n\n\nÉcrire des fonction R permettant de calculer le coefficient de Bravais-Pearson et celui de Spearman.\nCalculer leur valeur sur les données considérées.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#### Création de fct pour les différentes corrélation \n\nS = function(x, y){\n  sum((x - mean(x)) * (y - mean(y)))\n}\n\n## Correlation Bravais-Pearson\nCorBP = function(x, y){\n  S(x, y) / sqrt( S(x, x) * S(y, y) )\n  \n}\n\n## Correlation Spearman\nCorS = function(x, y){\n  CorBP(rank(x), rank(y))\n}\n\n#### On peut comparer avec la fonction cor() déjà sur r\n\nCorS(d$x, d$y) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\ncor(d$x, d$y, method=\"spearman\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\n#> CorS(x, y) \n#[1] 1\n#> cor(x, y, method=\"spearman\")\n#[1] 1\n\n\nCorBP(d$x, d$y) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9624807\n```\n:::\n\n```{.r .cell-code}\ncor(d$x, d$y, method=\"pearson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9624807\n```\n:::\n\n```{.r .cell-code}\n#> CorBP(x, y) \n#[1] 0.9624807\n#> cor(x, y, method=\"pearson\")\n#[1] 0.9624807\n\n\n\n# verif ok \n```\n:::\n\n\nCet exemple permet d’illustrer une différence entre les deux coefficients précédents, laquelle ?\nCommenter.\n\nMaintenant, au vu de l'alignement des points sur le graphes des rank, être proche  de 1 semble normal\n\nLe coeff de Spearman va regarder la monotonie (avec le rank) entre x et y et ici c'est monotone \n\nOn a une relation déterministe entre x et y. On peut donc écrire y = f(x)\n\n\n\n\n# Analyse\n\n::: callout-note\nMETTRE LES REMARQUES\n:::\n\n::: callout-warning\nMETTRE LES POINTS D'ATTENTION\n:::\n\n:::: success-header\n::: success-icon\n:::\n\nRésultats\n::::\n\n::: success\nMETTRE LES CONCLUSIONS\n:::\n\n# Conclusion\n\n# Session info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info(pkgs = \"attached\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.2.1 (2022-06-23 ucrt)\n os       Windows 10 x64 (build 26100)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  French_France.utf8\n ctype    French_France.utf8\n tz       Europe/Paris\n date     2025-04-06\n pandoc   3.2 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package * version date (UTC) lib source\n ggplot2 * 3.5.1   2024-04-23 [1] CRAN (R 4.2.3)\n\n [1] C:/Users/cleme/AppData/Local/R/win-library/4.2\n [2] C:/Program Files/R/R-4.2.1/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n\n\n",
    "supporting": [
      "Exercice_01.02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}